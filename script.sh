#!/bin/bash
set -euo pipefail

if [ -z "${PLUGIN_FILE:-}" ]; then
  echo "Error: please provide the configuration file for labeler "
  exit 1
fi

if [ -z "${GITHUB_TOKEN-}" ]; then
    echo "Error: please provide the GITHUB_TOKEN for labeler"
    exit 1
fi

CI_BRANCH="ci-trim-labels_${DRONE_BRANCH}_$(date +%Y-%m-%d-%H-%M-%S)"

trace() {
  cmd=($@)
  echo "+ ${cmd[*]}"
  "${cmd[@]}"
}

main() {
  if [ "${DRONE_BRANCH}" == "master" ] || [[ "${DRONE_BRANCH}" =~ ${PLUGIN_BRANCH:-^labels-ci} ]]; then
    echo "Repository label processing branch matched"

    trace labeler apply ${PLUGIN_FILE} -l 9

    if [ "${PLUGIN_TRIM:-false}" == "true" ]; then
      trace labeler trim ${PLUGIN_FILE}

      commit_git
    else
      echo "Skipping trimming ${PLUGIN_FILE}, because trimmed: false"
    fi

    echo "Done processing repository labels"
  else
    echo "Repository label processing branch not matched, skipping"
  fi
}

config_git() {
  if [ -z "${PLUGIN_EMAIL-}" ]; then
    echo "Error: please provide an email for git"
    exit 1
  fi

  if [ -z "${PLUGIN_USERNAME-}" ]; then
    echo "Error: please provide an name for git"
    exit 1
  fi

  git config user.email "${PLUGIN_EMAIL}"
  git config user.name "${PLUGIN_USERNAME}"

  git config --global credential.helper store

  echo "https://${GITHUB_TOKEN}:x-oauth-basic@github.com" > ~/.git-credentials
}

cleanup_git() {
  rm -rf ~/.git-credentials
}

config_commit() {
  cat <<EOF > /tmp/COMMIT.md
COMMIT BY CI: trim ${PLUGIN_FILE}
EOF
}

config_pr() {
  cat <<EOF > /tmp/PR.md
[ci] Trim ${PLUGIN_FILE}

Automatically generated by \`labeler trim ${PLUGIN_FILE}\` (https://github.com/tonglil/labeler).
EOF
}

commit_git() {
  diff=$(git diff --name-only -- ${PLUGIN_FILE})
  if [ "$diff" == "${PLUGIN_FILE}" ]; then
    echo "Detected changes to ${PLUGIN_FILE} after trimming, creating new branch"

    config_git
    config_commit

    trace git checkout -b "${CI_BRANCH}"
    trace git add ${PLUGIN_FILE}
    trace git commit -F /tmp/COMMIT.md
    trace git push origin "${CI_BRANCH}"

    cleanup_git

    make_pr
  else
    echo "${PLUGIN_FILE} up-to-date"
  fi
}

make_pr() {
  if [ "${PLUGIN_PR:-false}" == "true" ]; then
    echo "Sending PR with ${PLUGIN_FILE} changes"

    config_pr

    trace hub pull-request -F /tmp/PR.md -b "${DRONE_BRANCH}" -h "${CI_BRANCH}"
  else
    echo "Skipping sending PR, because pr: false"
  fi
}

main
